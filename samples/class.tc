
type Node = interface {
    fn forward() -> Node
    fn backward() -> Node
}

type ConstantNode = class(Node) {
    fn forward() -> Node {
        return self
    }
    fn backward() -> Node {
        return self
    }
}

type DisplayMode = enum {
    Windowed,
    Fullscreen,
    Borderless
}

type Window = struct {
    width: u32,
    height: u32,
    title: string,
    depth: u32,
    displayMode:DisplayMode
}


fn printWin(w: struct {height: u32, width: u32}) {
    println("Window: " + w.title)
}
